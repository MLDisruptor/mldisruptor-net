name: Disruptor.NET CI

on:
    push:
        branches:
            - main
        tags-ignore:
            - '*' # Don't run on tag pushes

permissions:
    contents: write

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Start Date
              id: mldisruptor_ci_startdate
              run: echo "mldisruptor_ci_startdate=$(date)" >> $GITHUB_OUTPUT

            - name: Checkout code
              uses: actions/checkout@v3
              with:
                fetch-depth: 0 # Fetch all history for tags

            - name: Install dotnet
              uses: actions/setup-dotnet@v3
              with:
                dotnet-version: '8.x.x'

            - name: Install Node.js v22.14.0
              uses: actions/setup-node@v3
              with:
                node-version: '22.14.0'

            - name: Install npm dependencies
              run:
                npm ci

            - name: Increment version and create tag
              id: versioning
              run: npx tsx ./eng/lib/versioning.ts
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Calculate Version Without Revision
              id: version_no_revision
              run: |
                VERSION_NO_REVISION=${{ steps.versioning.outputs.version }} # Full version
                VERSION_NO_REVISION=${VERSION_NO_REVISION%.*} # Remove the last ".0"
                echo "VERSION_NO_REVISION=$VERSION_NO_REVISION" >> $GITHUB_OUTPUT

            - name: Restore ML Disruptor .NET
              run:
                npx tsx ./eng/tasks/restore.mldisruptor.net.task.ts

            - name: Build ML Disruptor .NET (${{ steps.versioning.outputs.version }})
              env:
                VERSION: ${{ steps.versioning.outputs.version }}
              run: |
                npx tsx ./eng/tasks/build.mldisruptor.net.task.ts
                mkdir -p mldisruptor-net-artifacts_${{ steps.versioning.outputs.version }}
                cp -r ./src/packages/MLDisruptor.NET/bin/Release/net8.0/* ./mldisruptor-net-artifacts_${{ steps.versioning.outputs.version }}
                mkdir -p mldisruptor-net-performancepredictor-artifacts_${{ steps.versioning.outputs.version }}
                cp -r ./src/packages/MLDisruptor.NET.PerformancePredictor/bin/Release/net8.0/* ./mldisruptor-net-performancepredictor-artifacts_${{ steps.versioning.outputs.version }}

            - name: Run ML Disruptor Tests
              id: tests
              run:
                npx tsx ./eng/tasks/test.mldisruptor.net.task.ts

            - name: Pack ML Disruptor .NET
              id: mldisruptor-net-pack
              run: |
                dotnet pack ./src/packages/MLDisruptor.NET/MLDisruptor.NET.csproj -c Release --verbosity detailed /p:Version=${{ steps.versioning.outputs.version }}
                echo "Copying .nupkg files to ./mldisruptor-net-artifacts_${{ steps.versioning.outputs.version }}"
                cp ./src/packages/MLDisruptor.NET/bin/Release/*.nupkg ./mldisruptor-net-artifacts_${{ steps.versioning.outputs.version }}

            - name: Publish ML Disruptor .NET NuGet
              env:
                ISACT: ${{ env.ACT || 'false' }}
                NUGET_API_KEY: ${{ secrets.NUGET_MLDISRUPTOR_NET_KEY }}
              if: ${{ env.ISACT == 'false' && github.ref == 'refs/heads/main' && steps.tests.outcome == 'success' && steps.mldisruptor-net-pack.outcome == 'success' }}
              run: dotnet nuget push ./mldisruptor-net-artifacts_${{ steps.versioning.outputs.version }}/*.nupkg --source https://api.nuget.org/v3/index.json --api-key $NUGET_API_KEY

            - name: Upload ML Disruptor .NET Artifacts
              env:
                ISACT: ${{ env.ACT || 'false' }}
              if: ${{ env.ISACT == 'false' && success() && steps.tests.outcome == 'success' }} # Only upload if tests succeed
              id: mldisruptor-net-artifacts
              uses: actions/upload-artifact@v4
              with:
                name: mldisruptor-net-artifacts_${{ steps.versioning.outputs.version }}
                path: ./mldisruptor-net-artifacts_${{ steps.versioning.outputs.version }}

            - name: List ML Disruptor .NET Artifacts Directory for ${{ steps.versioning.outputs.version }}
              env:
                ISACT: ${{ env.ACT || 'false' }}
              if: ${{ env.ISACT == 'true' }}
              run: |
                echo "Checking for .nupkg file in ./mldisruptor-net-artifacts_${{ steps.versioning.outputs.version }}"
                ls -la ./mldisruptor-net-artifacts_${{ steps.versioning.outputs.version }}

            - name: Local NuGet Test for ML Disruptor .NET
              env:
                ISACT: ${{ env.ACT || 'false' }}
              if: ${{ env.ISACT == 'true' }}
              run: |
                if [ -f "./mldisruptor-net-artifacts_${{ steps.versioning.outputs.version }}/MLDisruptor.NET.${{ steps.version_no_revision.outputs.VERSION_NO_REVISION }}.nupkg" ]; then
                  echo "NuGet package found: MLDisruptor.NET.${{ steps.version_no_revision.outputs.VERSION_NO_REVISION }}.nupkg"
                else
                  echo "Error: NuGet package not found!"
                  exit 1
                fi

            - name: Upload ML Disruptor .NET Performance Predictor Artifacts
              env:
                ISACT: ${{ env.ACT || 'false' }}
              if: ${{ env.ISACT == 'false' && success() && steps.tests.outcome == 'success' }} # Only upload if tests succeed
              id: mldisruptor-net-performancepredictor-artifacts
              uses: actions/upload-artifact@v4
              with:
                name: mldisruptor-net-performancepredictor-artifacts_${{ steps.versioning.outputs.version }}
                path: ./mldisruptor-net-performancepredictor-artifacts_${{ steps.versioning.outputs.version }}

            - name: Pipline Ending At
              run: |
                echo "Pipeline ending at $(date)"
                echo "Pipeline duration: $((($(date +%s) - $(date -d "${{ steps.mldisruptor_ci_startdate.outputs.mldisruptor_ci_startdate }}" +%s)) / 60)) minute(s)"